class Solution {
public:
    vector<int> a;
    TreeNode* balanceBST(TreeNode* root) {
        recur(root);
        sort(a.begin(),a.end());
        int l = 0, r= a.size() -1;
        TreeNode* ans = partition(a, l, r);
        
        return ans;
    }
    void recur(TreeNode* root){
        if(root==NULL)
            return;
        a.push_back(root->val);
        recur(root->left);
        recur(root->right);
    }
    TreeNode* partition(vector<int> &a, int l, int r){
        if(l>r)
            return NULL;
        int m = (l+r)/2;
        TreeNode* now = new TreeNode(a[m], partition(a, l, m-1), partition(a, m+1, r));
        return now;
    }
};
