class Solution {
public:
    vector<string> split(string s){
        vector<string> res;
        int n= s.size();
        int i=0;
        while(i<n){
            string temp = "";
            while(i<n && isalpha(s[i])){
                temp+= s[i];
                i++;
            }
            i+=1;
            res.push_back(temp);
        }
        return res;
    }
    vector<string> uncommonFromSentences(string s1, string s2) {
        vector<string> ans;
        vector<string> temp1 = split(s1);
        vector<string> temp2 = split(s2);
        map<string, int> st, mt;
        
        for(int i=0;i<temp1.size();i++){
            st[temp1[i]]+=1;
        }
        for(int i=0;i<temp2.size();i++){
            mt[temp2[i]]+=1;
        }
        for(int i=0;i<temp2.size();i++){
            if(st.find(temp2[i])==st.end() && mt[temp2[i]]==1){
                ans.push_back(temp2[i]);
            }
        }
        for(int i=0;i<temp1.size();i++){
            if(mt.find(temp1[i])==mt.end() && st[temp1[i]]==1){
                ans.push_back(temp1[i]);
            }
        }
        return ans;
    }
};
