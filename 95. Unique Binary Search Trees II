/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define pb push_back
class Solution {
public:
    vector<TreeNode*> recur(int start, int end){
        vector<TreeNode*> ans;
        if(start>end){
            TreeNode* now= NULL;
            ans.pb(now);
            return ans;
        }
        
        for(int i=start; i<=end;i++){
            vector<TreeNode*> left= recur(start, i-1);
            vector<TreeNode*> right= recur(i+1, end);
            
            for(auto left_tree: left){
                for(auto right_tree: right){
                    
                    TreeNode* now= new TreeNode(i, left_tree, right_tree);
                    ans.pb(now);
                }
            }
        }
        
        return ans;
       
    }
    
    vector<TreeNode*> generateTrees(int n) {
        return recur(1, n);
    }
};
