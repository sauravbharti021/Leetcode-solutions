#define ss second
#define ff first
class Solution {
public:
    string countOfAtoms(string formula) {
        formula.insert(formula.begin(), '(');
        formula.push_back(')');
        stack<pair<string,int>> st;
        string s = formula;
        int n = s.size();
        
        for(int i=0;i<n;i++){
            if(isalpha(s[i])){
                string temp = "";
                temp+= s[i];
                int fre = 0;
                int j = i+1;
                int nextNumber = 0;
                while(j<n ){
                    if(isalpha(s[j]) && islower(s[j])){
                        temp+= s[j];
                        j++;
                        continue;
                    }
                    else if(isdigit(s[j])){
                        while(j<n && isdigit(s[j])){
                            fre*=10;
                            fre+= (s[j]-'0');
                            j++;
                        }
                        break;
                    }else
                        break;
        
                }
                st.push({temp, (fre==0? 1: fre)});
                i=j-1;
            }else if(!isdigit(s[i])){
                if(st.empty() || s[i]=='('){
                    string temp = "";
                    temp+= s[i];
                    st.push({temp, 0});
                }else{
                    if(s[i]==')'){
                        
                        int j = i+1;
                        int fre = 0;
                        int flag = 0;
                        while(j<n && isdigit(s[j])){
                            fre*=10;
                            fre+= (s[j]-'0');
                            j++;
                            flag =1;
                        }
                        if(flag)
                            i=j-1;
                        stack<pair<string, int>> tempSt;
                        while(!st.empty() && st.top().ff[0]!='('){
                            pair<string,int> x= st.top();
                            st.pop();
                            tempSt.push({x.ff, x.ss*(fre==0 ? 1: fre)});                            
                        }
                        if(!st.empty()) st.pop();
                        while(!tempSt.empty()){
                            pair<string,int> x= tempSt.top();
                            tempSt.pop();
                            st.push({x.ff, x.ss});
                        }
                            
                       
                    }else{
                        st.push({"(", 0});
                    }
                }
            }
        }
        map<string, int> m;
        while(!st.empty()){
            m[st.top().ff]+= st.top().ss;
            st.pop();
        }
        
        string ans = "";
        for(auto i: m){
            ans+= i.ff;
            if(i.ss>1)
            ans+= to_string(i.ss);
        }
        return ans;
    }
};
