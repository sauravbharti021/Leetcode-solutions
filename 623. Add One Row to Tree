/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* curr= new TreeNode(NULL);
    TreeNode* ans= curr;
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        
        TreeNode* head= root;
        if(depth==1){
            curr->val= val;
            curr->left=root;
            return curr;
        }
       
        curr->val= root->val;
        recur(root, head, depth, val, 1);
        return head;
    }
    void recur(TreeNode* root, TreeNode* head, int depth, int val, int myDepth ){
        
        if(head == NULL) return;
        
        if(myDepth== depth-1){
            
            TreeNode* hehe= new TreeNode(val);
            hehe->left= head->left;
            
            TreeNode* huhu= new TreeNode(val);
            huhu->right= head->right;
            
            head->left= hehe;
            head->right = huhu;
      
            return;
        }
        
        if(head->left != NULL) recur(root->left,head->left, depth, val, myDepth+1);
        if(head->right != NULL) recur(root->right,head->right, depth, val, myDepth+1);
        
      
        
    }
};
