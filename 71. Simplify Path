#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    string simplifyPath(string path) {
        
        stack<string> s;
        vector<string> lol;
        ll n=path.size();
        
        rep(i,n){
            if(path[i]=='/'){
                while(i<n && path[i]=='/') i++;
                
                i--;
            }
            else{
                string f="";
                while(i<n && path[i]!='/'){
                    f+=path[i];
                    i++;
                }
                lol.pb(f);
                i--;
            } 
        }
        
        rep(i,lol.size()){
            string now=lol[i];
            if(now==".") continue;
            else if(now==".."){
                if(!s.empty()) s.pop();
            }
            else
            s.push(now);
        }
        
        string ans="";
        vector<string> fool; 
        while(!s.empty()){
            
            string now=s.top();
            s.pop();
            fool.pb(now);
            
        }
        
        rrep(i,fool.size()){
            ans+='/';
            ans+=fool[i];
        }
        
        
        if(ans.size()==0) ans+='/';
        
        return ans;
    }
};
