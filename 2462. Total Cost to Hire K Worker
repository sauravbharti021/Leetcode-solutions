#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int candidates) {
        
        ll n=costs.size();
        multiset<int> left, right;
        
        rep(i, candidates){
            left.insert(costs[i]);
        }
        ll l=candidates, r= max(n-candidates-1, l-1);
        for(int i=r+1; i<n; i++){
            right.insert(costs[i]);
        }
        
        ll ans=0;
        while(k--){
            ll le = left.empty() ? 1e9 : *(left.begin());
            ll ri = right.empty() ? 1e9: *(right.begin());
            
            if(le<=ri){
                int now = *(left.begin());
                ans+= now;
                left.erase(left.equal_range(now).ff);
                if(l<=r) {
                    left.insert(costs[l]);
                    l++;
                }
            }else{
                int now= *(right.begin());
                ans+= now;
                right.erase(right.equal_range(now).ff);
                if(r>=l){
                    right.insert(costs[r]);
                    r--;
                }
            }
        }
        
        return ans;
    }
};
