class Solution {
public:
    bool doesValidArrayExist(vector<int>& derived) {
      int n = derived.size();
      if(n==1) {
        if(derived[0]==0) return true;
        return false;
      }
      if(n==2){
        if(derived[0]!=derived[1]) return false;
        return true;
      }
      int zc=0, oc = 0;
      for(int i=0;i<n;i++){
        if(derived[i]==0) zc+=1;
        else oc+=1;
      }
      if( zc==n) return true;
      if(process(0, derived) || process(1, derived)) return true;

      return false;  

    }
    bool process(int str, vector<int> &a){

        vector<int> temp(a.size(), 0);
        temp[0] = str;
        int n = a.size();
        for(int i=1;i<temp.size();i++){
            int x = a[i] ^ temp[i-1];
            if(i<n-1){
                temp[i] = x;
            }else{
                if(x^temp[0]!=a[0]) return false;
            }
        }
        return true;
    }
};
