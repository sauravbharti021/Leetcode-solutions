/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> a;
    int getMinimumDifference(TreeNode* root) {
        
        recur(root);
        int mi= 1e9;
        for(int i=0;i<a.size()-1;i++)
            mi = min(mi, (a[i+1]-a[i]));
        
        return mi;
    }
    // Inorder traversal
    void recur(TreeNode* root){
        if(root==NULL) return;
        
        recur(root->left);
        a.push_back(root->val);
        recur(root->right);
    }
};
