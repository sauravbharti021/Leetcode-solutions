#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<vector<ll>> dp;
    int kInversePairs(int n, int k) {
        
        ///Mahonian traiangle https://math.stackexchange.com/questions/1197134/how-to-calculate-1x1xx2-cdots1xx2-cdotsxn/1197226#1197226
        
        dp.assign(1001,vector<ll>(1001, -1) );
        
        
        int ans= recur(n,k);
        return ans%mod;
    }
    
    int recur(int n, int k){
        
        if(k<0) return 0;
        if(n==1 ){
            if(k==0 ) return dp[n][k]=1;
            return dp[n][k]=0;
        }
        if(n<0) return 0;
      if(dp[n][k]!=-1)
          return dp[n][k]%mod;
        
        ll x=recur(n,k-1)%mod;
        ll y= recur(n-1,k)%mod;
        ll z=recur(n-1, k-n)%mod;
        
        if(x<0) x+=mod;
        if(y<0) y+=mod;
        if(z<0) z+=mod;
        
        ll now= x+y-z;
        if(now<0) now+=mod;
        
        return  (dp[n][k]=  now ) %=mod; 
        
        
    }
};
