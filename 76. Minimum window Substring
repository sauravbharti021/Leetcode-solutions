#define rep(i,n) for(int i=0;i<n;i++)
#define ll long long
class Solution {
public:
    string minWindow(string s, string t) {
        
        int n= s.size();
        int m= t.size();
        
        vector<vector<int>> fre_s_l(n, vector<int>(26, 0));
        vector<vector<int>> fre_s_u(n, vector<int>(26, 0));
        
        
        vector<int> fre_t_l(26, 0);
        vector<int> fre_t_u(26, 0);
        
        rep(i,n){
            rep(j, 26){
                fre_s_l[i][j] = (i>0 ? fre_s_l[i-1][j] : 0) + ( (islower(s[i]) && (s[i]-'a') == j) ? 1 : 0); 
                fre_s_u[i][j] = (i>0 ? fre_s_u[i-1][j] : 0) + ( (isupper(s[i]) && (s[i]-'A') == j) ? 1 : 0); 
                
            }
        }
        rep(i,m){
            if(islower(t[i]))
                fre_t_l[t[i]-'a']++; 
            else
                fre_t_u[t[i]-'A']++;
        }
      
        
        if(m>n)
            return "";
        
        int l=m-1, r= n+1;
        int flag_p=0;
        int starting = -1;
        
        while(r-l>1){
            ll mid = (r+l)/2;
            ll flag=0;
            
            for(int i=0;i+mid<=n; i++){
                int flag2=0;
                rep(j,26){
                    int cur_l = fre_s_l[(i+mid-1)][j] - (i>0 ? fre_s_l[i-1][j] : 0);
                    int cur_u = fre_s_u[(i+mid-1)][j] - (i>0 ? fre_s_u[i-1][j] : 0);
                    
                    if(fre_t_l[j]>cur_l){
                        flag2=1;
                        break;
                    }
                    if(fre_t_u[j]>cur_u){
                        flag2=1;
                        break;
                    }
                }
                if(!flag2){
                    starting = i;
                    flag=1;
                    break;
                }
            }
            
            if(flag){
                flag_p=1;
                r=mid;
            }else{
                l=mid;
            }
            
        }
        
        if(!flag_p)
            return "";
        
        return s.substr(starting, r);
        
        
  
