#define rep(i,n) for(int i=0;i<n;i++)
#define rrep(i,n) for(int i=n-1;i>=0;i--)
#define ll long long
class Solution {
public:
    int largestSubmatrix(vector<vector<int>>& matrix) {
        
        int n=matrix.size(), m= matrix[0].size();
        cout<<m<<"\n";
        vector<vector<int>> suf(n, vector<int>(m,0));
       
        rrep(i,n){
            rep(j,m){
                if(i+1<n && matrix[i+1][j]==1 && matrix[i][j]==1){
                    suf[i][j] = suf[i+1][j]+ matrix[i][j];
                }
                else suf[i][j] = matrix[i][j];
            }
        }
        
        ll mx=0;
    
      
        
        rep(i,n){
            vector<int> a(m,0);
            rep(j,m){
                a[j]=suf[i][j];
            }
            sort(a.begin(), a.end(), greater<int>());
            
            rep(j,m){
                ll ans= a[j]*(j+1);
                mx=max(mx, ans);
            }
        }
        
        return mx;
        
    }
};
