#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<vector<ll>> now;
        
    vector<double> averageOfLevels(TreeNode* root) {
        TreeNode* head= root;
        now.assign(1001, vector<ll>());
        
        recur(head, 0);
        
        vector<double> ans;
        
        rep(i,1001){
            if(now[i].size()==0) break;
            else{
                double sum=0;
                rep(j, now[i].size()){
                    sum+=now[i][j];
                }
                sum*=1.0;
                sum/= now[i].size();
                
                ans.pb(sum);
            }
        }
        
        return ans;
    }
    
    void recur(TreeNode* node, int level){
        
        now[level].pb(node->val);
        
        if(node->left!=NULL) recur(node->left, level+1);
        if(node->right!=NULL) recur(node->right , level+1);
    }
    
};
