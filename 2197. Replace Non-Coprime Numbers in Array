class Solution {
public:
    int gcd (int a, int b){
        if(b==0) return a;
        return gcd(b, a%b);
    }
    vector<int> replaceNonCoprimes(vector<int>& nums) {
        int n = nums.size();
        stack<int> st;

        for(int i=0;i<n;i++){
            st.push(nums[i]);
            while(st.size()>=2 ){
                long long x = st.top();
                st.pop();
                long long y = st.top();
                st.pop();
                long long g = gcd(x,y);
                if(g>1){
                    st.push((x*y)/g);
                } else {
                    st.push(y);
                    st.push(x);
                    break;
                }
            }
        }

        vector<int> ans;
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};
