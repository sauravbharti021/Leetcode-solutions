class Solution {
public:
    vector<int> dp;
    int recur(int i, string &s, set<string> &st){
        if(i>=s.size()){
            return 0;
        }
        if(dp[i]!=-1)
            return dp[i];
        
        int ans = 1e9;
        string now="";
        for(int j=i;j<s.size();j++){
            now+= s[j];
            if(st.find(now)!=st.end()){
                ans = min(ans, recur(j+1, s, st));
            }
            ans = min(ans, (int)(now.size() + recur(j+1, s, st)));
        }
        return dp[i] = ans;
    }
    int minExtraChar(string s, vector<string>& dictionary) {
        set<string> st;
        for(int i=0;i<dictionary.size();i++){
            st.insert(dictionary[i]);
        }
        int n= s.size();
        dp.assign(n+1, -1);
        int res = recur(0, s, st);
        return res;
        
    }
};
