#define rep(i,n) for(int i=0;i<n; i++)
class Solution {
public:
    int dp[50001][2];
    int recur(int i, int flag, int prev, vector<int> &prices, int fee){
        if(i>=prices.size())
            return 0;
        
        if(dp[i][flag]!=-1) return dp[i][flag];
        
        int ans=0;
        if(!flag){
            ans= max( -prices[i]+recur(i+1, 1, prices[i], prices, fee), recur(i+1, 0, prev, prices, fee));
        }
        else{
            ans = max ((prices[i])-fee+recur(i+1, 0, 0, prices, fee), recur(i+1, flag, prev, prices, fee));
            
        }
        
        return dp[i][flag]=ans;
    }
    int maxProfit(vector<int>& prices, int fee) {
        memset(dp, -1, sizeof dp);
        
        int x= recur(0, 0, 0, prices, fee);
        return x;
    }
};
