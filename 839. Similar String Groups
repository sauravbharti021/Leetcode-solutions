#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)

struct dsu{

    vector<ll> par, rank;
    void makeset(int n){
        par.assign(n+2, 0);
        rank.assign(n+2, 1);

        rep(i,n+1) par[i]=i;
    }

    int find(int x){
        while(par[x]!=x)
            x= par[x];

        return x;
    }

    void unite(int u, int v){
        u= find(u), v=find(v);

        if(u!=v){
            if(rank[u]<rank[v]){
                par[u] = v;
                rank[v]+=rank[u];
            }
            else{
                par[v]=u;
                rank[u]+=rank[v];
            }

        }
    }


};

class Solution {
public:
    int numSimilarGroups(vector<string>& strs) {
        
        dsu d;
        ll n= strs.size(), m=strs[0].size();
        
        d.makeset(n);
        
        
        rep(i,n){
            
            for(int j=i+1; j<n; j++){
                
                ll cnt=0;
                rep(k, m){
                    if(strs[i][k]!=strs[j][k]) cnt++;
                }
                if(cnt==2 || cnt==0) d.unite(i,j);
            }
        }
        
        set<ll> s;
        rep(i,n) {
              s.insert(d.find(i));
        }
            
        
        return s.size();
    }
};
