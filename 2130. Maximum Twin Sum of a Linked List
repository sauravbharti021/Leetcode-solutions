/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        
        ListNode slow = head, fast= head;
        
        while(fast!=null && fast.next!=null){
            slow= slow.next;
            fast = fast.next.next;
        }
        
        ListNode cur=rev(slow);
       
     
        int mx = 0;

        
        while(head!=null && cur!= null){
            mx = Math.max(mx, head.val+ cur.val);
            
            head= head.next;
            cur = cur.next;
        }
        return mx;
    }
    
    ListNode rev(ListNode cur){
        ListNode prev=null;
        
        while(cur!= null){
            ListNode lol = cur.next;
            cur.next = prev;
            prev= cur;
            if(lol == null) break;
            cur = lol;
        }
        
        return cur;
    }
}
