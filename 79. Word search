class Solution {
public:
    vector<vector<bool>> vis;
    vector<vector<int>> dir{{-1,0}, {0,1}, {0, -1}, {1, 0}};
    
    bool recur(int i, int j, int l, vector<vector<char>> &board, string  &word){
        if(i>=board.size() || i<0 || j>=board[0].size() || j<0){
            return false;
        }
        
        if(l>=word.size()){
            return true;
        }
        
        vis[i][j] = true;
        
        bool ans=false;
        
        for(int k=0;k<4;k++){
            int u= i+dir[k][0], v= j+dir[k][1];
            
            if(u>=0 && v>=0 && u<board.size() && v<board[0].size() ){
                if(!vis[u][v]){
                    if(board[u][v] == word[l]){
                        ans |= recur(u, v, l+1, board, word);
                        
                    }
                }
            }
        }
        vis[i][j] = false;
        return ans;
        
            
    }
    
    bool exist(vector<vector<char>>& board, string word) {
        int n= board.size(), m = board[0].size();
        
        vis.assign(n+1, vector<bool>(m+1, false));
        
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j] == word[0]){
                    bool x= recur(i, j, 1, board, word);
                    if(x)
                        return true;
                }
            }
        }
        
        return false;
    }
};
