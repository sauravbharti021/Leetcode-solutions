/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define ll long long
class Solution {
public:
    unsigned int best=0;
    map<ll,unsigned int> m;
    int widthOfBinaryTree(TreeNode* root) {
        
        recur(root, 0, 0);
        
        return best;
    }
    void recur(TreeNode* root, unsigned int depth, unsigned int ans){
        if(root==NULL) return;
        
        if(m.find(depth)==m.end())
            m[depth] = ans;
        
        best= max(best, ans- m[depth]+1 );
        recur(root->left, depth+1, (1ULL*ans*2) + 1);
        recur(root->right, depth+1, (1ULL*ans*2) + 2);
        
        
    }
};
