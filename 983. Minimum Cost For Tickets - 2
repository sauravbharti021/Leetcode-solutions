#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<ll> dp;
    ll recur(int i, vector<int> &days, vector<int> &costs, ll &n){
        if(i>=n) return 0;
        
        if(dp[i]!=-1) return dp[i];
        
        ll cost = 1e10;
        
        ll i1= n;
        ll day1 = days[i]+1-1;
        for(int j=i ;j<n; j++){
            if(days[j]>day1){
                i1=j;
                break;
            }
        }
        cost = min(cost, costs[0]+recur(i1, days, costs, n) );
        
        ll i7= n;
        ll day7 = days[i]+7-1;
        for(int j=i ;j<n; j++){
            if(days[j]>day7){
                i7=j;
                break;
            }
        }
        cost = min(cost, costs[1]+recur(i7, days, costs, n) );
        
        ll i30= n;
        ll day30 = days[i]+30-1;
        for(int j=i ;j<n; j++){
            if(days[j]>day30){
                i30=j;
                break;
            }
        }
        cost = min(cost, costs[2]+recur(i30, days, costs, n) );
        
        return dp[i]=cost;
        
    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        ll n= days.size();
        dp.assign(370, -1);
        
        ll ans= recur(0, days, costs, n);
        
        
        return ans;
    }
    
};
