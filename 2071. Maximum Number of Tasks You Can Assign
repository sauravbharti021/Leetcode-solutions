#define ll long long
#define all(c) c.begin(), c.end()
class Solution {
public:
    int maxTaskAssign(vector<int>& tasks, vector<int>& workers, int pills, int strength) {
        sort(all(tasks));
        sort(all(workers));
        int n= workers.size(), m= tasks.size();

        int l=0, r=min(n,m)+1;
        while(r-l>1){
            int mid = (l+r)/2;
            if(helper(mid, tasks, workers, pills, strength)){
                l=mid;
            }else{
                r=mid;
            }

        }

        return l;



    }
    bool helper(int k, vector<int> &tasks, vector<int> &workers, int pill, int str){
        int m = workers.size(), n=tasks.size();
        multiset<int> ms;
        
        for(int i=m-1;i>=m-k;i--){
            ms.insert(workers[i]);
        }
        for(int i=k-1;i>=0;i--){

            if(*(--ms.end()) >= tasks[i] ){
                auto it= --ms.end();
                ms.erase(it);
            }else{
                if(pill<=0) return false;
                auto it = ms.lower_bound(tasks[i] - str);
                if(it==ms.end()) return false;
                pill-=1;
                ms.erase(it);
            }
        }

        return true;


    }
};
