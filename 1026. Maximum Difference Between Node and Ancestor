/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)


class Solution {
    ll mxx;
public:
    int maxAncestorDiff(TreeNode* root) {
        mxx=-1;
        recur(root, -1, 1e10);

        return mxx;
    }
    void recur(TreeNode* root, ll mx, ll mi){
        if(root==NULL) return;

        if(mx== -1 && mi==1e10 ){
            mx= root->val;
            mi= root->val;
        }
        mxx= max({mxx, abs(mx- root->val), abs(mi- root->val)});

       

        mx=max(mx, (ll)root->val);
        mi=min(mi, (ll)root->val);

        recur(root->left, mx, mi);
        recur(root->right, mx, mi);
    }
};
