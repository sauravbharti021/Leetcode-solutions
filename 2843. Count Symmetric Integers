class Solution {
public:
    int countSymmetricIntegers(int low, int high) {
        int cnt = 0;
        for(int i=low;i<=high;i++){
            cnt+= do_operations(i) ? 1: 0;
        }
        return cnt;
    }
    bool do_operations(int n){
        int left=0, right = 0;
        int x= n, total_sum = 0;
        vector<int> lol;
        while(x>0){
            int now = x%10;
            total_sum += now;
            lol.push_back(now);
            x/=10;
        }
        if(lol.size()%2==1) return false;

        int first_half = 0;
        for(int i=0;i<lol.size()/2;i++){
            first_half+= lol[i];
        }
        if(first_half == (total_sum-first_half)) return true;
        return false;
    }
};
