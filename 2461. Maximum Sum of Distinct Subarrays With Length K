#define ll long long
class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        int n= nums.size();
        int l = 0, r= 0;
        ll mx = 0;
        map<int,int> m;
        vector<ll> pre(n, 0);
        for(int i=0;i<n;i++){
            pre[i] = nums[i] + (i>0 ? pre[i-1] : 0);
        }
        
        while(r<n && l<=r){
            if(m.find(nums[r])!=m.end()){
                int indexFound = m[nums[r]];
                for(int j=l;j<=indexFound;j++){  
                    m.erase(nums[j]);
                }
                l= indexFound + 1;
            }
            int lookingFor = r - k + 1;
            if(lookingFor>=l){
                ll sumLeft = pre[r] - ((lookingFor-1)>=0 ? pre[lookingFor-1] : 0);
                mx = max(mx, sumLeft);
            }
            m[nums[r]] = r;
            r+=1;
        }
        return mx;
    }
};
