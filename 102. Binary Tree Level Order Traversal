/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<vector<int>> now;
    vector<vector<int>> levelOrder(TreeNode* root) {
        now.assign(1001, vector<int>());
        ans(root, 0);
        
         vector<vector<int>> ans1(1001, vector<int>() );
        int k=0;
        rep(i,1001){
            if(now[i].size()>0){
                rep(j, now[i].size()) {
                    ans1[k].pb(now[i][j]);
                }
                k++;
            }
        }
        
       
        
         vector<vector<int>> ans2(k, vector<int>() );
        rep(i,k){
            rep(j, ans1[i].size())
            ans2[i].pb(ans1[i][j]);
        }
        
        return ans2;
            
    }
    
    void ans(TreeNode* root,int dis){
        if(root==NULL) return;
        
        now[dis+1].pb(root->val);
        
        ans(root->left, dis+1);
        ans(root->right, dis+1);
    }
};

---------------------------------------------------------------------------------------------------------------------------------------------------------

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<vector<int>> now;
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        if(root==NULL) return now;
        queue<TreeNode*> q;
        q.push(root);
        
        
        while(!q.empty()){
            
            int t=q.size();
            vector<int> the;
            rep(i,t){
            TreeNode* x=q.front();
                q.pop();
              the.pb(x->val);
                
             if(x->left!=NULL) q.push(x->left);
             if(x->right!=NULL) q.push(x->right);   
            }
            now.pb(the);
        }
        
        return now;
        
            
    }

};
