#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
vector<vector<ll>> adj;
int flag=0, node=-1;
int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        
        ll n= edges.size();
        adj.assign(n+1, vector<ll>{});
        rep(i,n){
            if(edges[i]!=-1){
                adj[i].pb(edges[i]);
            }
        }
        
        vector<ll> dis1(n+1, 1e18);

        queue<ll> q;
        q.push(node1);
        dis1[node1]= 0;

        while(!q.empty()){
            ll x=q.front();
            q.pop();

            for(auto i: adj[x]){
                if(dis1[i]> dis1[x]+1){
                    dis1[i]= dis1[x]+1;
                    q.push(i);
                }
            }
        }

        vector<ll> dis2(n+1, 1e18);

        q.push(node2);
        dis2[node2]=0;

        while(!q.empty()){
            ll x=q.front();
            q.pop();

            for(auto i: adj[x]){
                if(dis2[i]> dis2[x]+1){
                    dis2[i]= dis2[x]+1;
                    q.push(i);
                }
            }
        }
        

        ll mi= 1e18, ans=-1;
        rep(i,n){
             ll mx= max(dis1[i], dis2[i]);
             if(mx<mi){
                mi=mx;
                ans=i;
             }   
        }

        return  ans;    
    }


};
