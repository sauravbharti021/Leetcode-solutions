/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* ans=NULL;
    ListNode *detectCycle(ListNode *head) {
      
        if(head==NULL) return ans;

        ListNode* slow=head;
        ListNode* fast=head;
        
        int flag=0;
        
        while(slow->next!=NULL && fast->next!=NULL && fast->next->next!=NULL ){
            slow=slow->next;
            fast= fast->next->next;
            
            if(slow==fast){
                slow=head;
                while(slow!=fast){
                    fast=fast->next;
                    slow=slow->next;
                }
                
                return slow;
            }
        }
        
        return ans;
    }
};
