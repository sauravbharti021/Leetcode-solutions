class Solution {
public:
    bool canBeValid(string s, string locked) {
        // 0 can be changed, stack with index.
        int n= s.size();
        if(n%2==1) return false;
        stack<int> open, free;
        for(int i=0;i<n;i++){
            if(locked[i]=='0'){
                free.push(i);
            }else{
                if(s[i] == ')'){
                    if(!open.empty()){
                        open.pop();
                    }else if(!free.empty()) free.pop();
                    else return false;
                }else{
                    open.push(i);
                }
            }
        }

        while(!open.empty() && !free.empty()){
            if(open.top()<free.top()){
                open.pop();
                free.pop();
            }else break;
        }
        return open.empty();
    }
};
