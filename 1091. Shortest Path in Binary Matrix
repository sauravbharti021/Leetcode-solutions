#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    
    vector<vector<int>> d {{0,1},{0,-1},{1,0},{-1,0}, {1,1}, {-1,-1},{-1,1}, {1,-1}};
    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {
        
        int n = grid.size(), m=grid[0].size();
        vector<vector<int>> dis(n+1, vector<int>(m+1, 1e9));
        if(grid[0][0]!=0) 
            return -1;
        
        queue<pair<int,int>> q;
        q.push({0,0});
        dis[0][0]=1;
        
        while(!q.empty()){
            pair<int,int> p= q.front();
            q.pop();
            
            rep(i, 8){
                int x = p.ff+d[i][0], y= p.ss+d[i][1];
                
                if(x<n && x>=0 && y<m && y>=0 && grid[x][y]==0 && dis[x][y]>dis[p.ff][p.ss]+1){
                    dis[x][y] = 1+ dis[p.ff][p.ss];
                    q.push({x,y});
                }
            }
            
        }
        
        return dis[n-1][m-1] == 1e9 ? -1 : dis[n-1][m-1]; 
        
        
    }
};
