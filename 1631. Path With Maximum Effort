#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int dp[201][201];
    vector<vector<int>> d{{0,1}, {0,-1}, {1,0}, {-1,0}};
    vector<vector<bool>> vis;
    int recur(int i, int j, vector<vector<int>> &h, int mid){
        int n= h.size(), m= h[0].size();
        if(i==n-1 && j==m-1) return 1;
        
        vis[i][j]= true;
        
        int flag=false;
        rep(k, 4){
            int x= i+d[k][0], y= j+d[k][1];
            if(x>=0 && y>=0 && x<n && y<m && !vis[x][y] && abs(h[x][y]-h[i][j])<=mid){
               flag |= recur(x,y, h, mid);
            }
        }
        
        return flag;
            
    }
    int minimumEffortPath(vector<vector<int>>& heights) {
        memset(dp, -1, sizeof dp);
        int n= heights.size(), m= heights[0].size();
        ll l= -1, r= 1e7;
        
        while(r-l>1){
            int mid= (l+r)/2;
            vis.assign(n+1, vector<bool>(m+1, false));
            if(recur(0,0, heights, mid))
                r=mid;
            else
                l=mid;
        }
        
        
        return r;
    }
};
