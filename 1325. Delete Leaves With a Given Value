class Solution {
public:
    TreeNode* removeLeafNodes(TreeNode* root, int target) {
        if(root==NULL){
            return NULL;
        }

        int fleft =0, fright=0;
        root->left = removeLeafNodes(root->left, target);
        root->right = removeLeafNodes(root->right, target);
        if(root->left!=NULL && root->left->val == target){
            if(root->left->left == NULL && root->left->right==NULL){
                fleft =1;
            }
        }
        if(root->right!=NULL && root->right->val == target){
            if(root->right->left == NULL && root->right->right==NULL){
                fright =1;
            }
        }
        
        if(fleft)
            root->left = NULL;
        if(fright){
            root->right = NULL;
        }
        
        if(root->val == target && root->left==NULL && root->right==NULL)
            return NULL;
        
        return root;
    }
};
