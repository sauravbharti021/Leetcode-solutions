#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        int n=garbage.size();
        // g, p, m
        vector<vector<int>> suf(n+1, vector<int>(3, 0)); 
        
        rrep(i,n){
            
            rep(j, 3){
                suf[i][j]+= suf[i+1][j];
                
            } 
            
            rep(j, garbage[i].size()){
                if(garbage[i][j]=='G') suf[i][0]+=1;
                else if(garbage[i][j]=='P') suf[i][1]+= 1;
                else suf[i][2]+= 1;
            }
        }
        
        int str=0, cnt=0;
        str=0;
        rep(i,n-1){
            if(suf[i][0]==0) break;
            else {
                str+= suf[i][0] - suf[i+1][0];  
                if(suf[i+1][0]>0) {
                   str+= travel[i];
                } 
            }
        }
        if(suf[n-1][0]>0) str+= suf[n-1][0];
        cnt+= str;
        
        str=0;
        rep(i,n-1){
            if(suf[i][1]==0) break;
            else {
                str+= suf[i][1] - suf[i+1][1];  
                if(suf[i+1][1]>0) {
                   str+= travel[i];
                } 
            }
        }
        if(suf[n-1][1]>0) str+= suf[n-1][1];
        cnt+= str;
        
        str=0;
        rep(i,n-1){
            if(suf[i][2]==0) break;
            else {
                str+= suf[i][2] - suf[i+1][2];  
                if(suf[i+1][2]>0) {
                   str+= travel[i];
                } 
            }
        }
        if(suf[n-1][2]>0) str+= suf[n-1][2];
        cnt+= str;
        
        
        return cnt;
    }
};
