class Solution {
public:
    int rangeBitwiseAnd(int left, int right) {
        
        if(right == 0)
            return 0;
        
        vector<int> fre1(32, 0), fre2(32, 0);
        int y= right;
        
        while(y>0){
            int x= 31- __builtin_clz(y);
            fre1[x]+=1;
            y-= (1ULL<<x);
        }
        
        y= left;
        while(y>0){
            int x= 31- __builtin_clz(y);
            fre2[x]+=1;
            y-= (1ULL<<x);
        }
        
        int my_ans=0;
        int highest_pow = 31 - __builtin_clz(right);
        for(int i= highest_pow; i>=0;i-- ){
            if(fre1[i]!=fre2[i]) break;
            
            if(fre1[i]==1)
                my_ans += (1ULL<<i);
        }
        
        return my_ans;
    }
};
