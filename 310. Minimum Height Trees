#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        if(n==1)
            return vector<int> {0};
        
        vector<int> degree(n+1, 0);
        vector<vector<int>> adj;
        adj.assign(n+1, vector<int> {});
        
        for(int i=0;i<edges.size();i++){
            int u= edges[i][0], v= edges[i][1];

            adj[u].push_back(v);
            adj[v].push_back(u);

        }
        
        queue<int> q;
        vector<int> ans;
        
        for(int i=0;i<=n;i++){
            degree[i] = adj[i].size();
            if(degree[i] == 1){
                q.push(i);
                degree[i] -=1;
                ans.push_back(i);
            }
        }
        
        while(true){
            int size = q.size();
            vector<int> temp;
            
            while(size--){
                int x= q.front();
                q.pop();
                
                for(auto v: adj[x]){
                    if(degree[v] > 0){
                        degree[v] -=1;
                        if(degree[v] == 1){
                            q.push(v);
                            temp.push_back(v);
                        }
                    }
                }
            }
            if(q.size()==0)
                return ans;
            ans=temp;
        }
        
        return ans;
    }
};
