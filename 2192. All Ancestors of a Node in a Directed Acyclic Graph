class Solution {
public:
    vector<int> temp;
    vector<bool> vis;
    void recur(int n, vector<vector<int>> &adj){
        vis[n] = true;
        for(auto j: adj[n]){
            if(!vis[j]){
                temp.push_back(j);
                recur(j, adj);
            }
        }
    }
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector<vector<int>> adj(n);
        vector<vector<int>> ans;
        
        for(int i=0;i<edges.size();i++){
            int u= edges[i][0], v= edges[i][1];
            adj[v].push_back(u);
        }
        vis.assign(n+1, false);
        for(int i=0;i<n;i++){
            temp.clear();
            vis.assign(n, false);
            recur(i, adj);
            sort(temp.begin(), temp.end());
            ans.push_back(temp);
        }
        return ans;
    }
};
