
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_multiset tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>
class KthLargest {
public:
    ordered_multiset ms;
    int K;
    KthLargest(int k, vector<int>& nums) {
        K=k;
        for(int i=0; i<nums.size();i++){
            ms.insert(nums[i]);
        }
    }
    
    int add(int val) {
        ms.insert(val);
        
        int size = ms.size();
        return *(ms.find_by_order(size-K));
    }
};
