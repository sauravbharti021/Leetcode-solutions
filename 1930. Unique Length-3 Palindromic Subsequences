class Solution {
public:
    int countPalindromicSubsequence(string s) {
        int n=s.size();
        map<char,vector<int>> m;
        for(int i=0;i<n;i++) m[s[i]].push_back(i);
        
        int cnt=0;
        
        for(auto i: m){
            if(i.second.size()>=2){
                int str= i.second[0], end= i.second.back();
                
                for(int j=0;j<26;j++){
                    if(m.find('a'+j)!=m.end()){
                        auto it= upper_bound( m[('a'+j)].begin(), m[('a'+j)].end(), str );
                        
                        if(it== m[('a'+j)].end()) continue;
                        
                        if(*it<end) {
                            cnt++;
                        }
                    }
                }
            }
        }
        
        return cnt;
        
    }
};
