#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int minimumTime(vector<vector<int>>& grid) {

        int n= grid.size(), m= grid[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(((i+j)%2) != (grid[i][j]%2)){
                    grid[i][j] += 1;
                }
            }
        }
        
        if(grid[0][1]!=1 && grid[1][0]!=1) return -1;
        priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>>> pq;
        vector<vector<int>> dis(n, vector<int>(m, 1e9));
        
        pq.push({0, 0, 0});
        dis[0][0] = 0;
        vector<vector<int>> dir{{0,1}, {0,-1}, {1,0}, {-1,0}};
        
        while(!pq.empty()){
            vector<int> a = pq.top();
            pq.pop();
            if(dis[a[1]][a[2]]<a[0]) continue;
            
            for(auto i: dir){
                int u = a[1] + i[0], v= a[2] + i[1];
                int d= a[0];
                if(u>=0 && u<n && v>=0 && v<m){
                    int nd = max(d+1, grid[u][v]);
                    if(nd < dis[u][v]){
                        dis[u][v] = nd;
                        pq.push({dis[u][v], u, v});
                    }
                }
            }
        }
        return dis[n-1][m-1];
    }
};
