class Solution {
public:
    map<int,int> m;
    string repeatLimitedString(string s, int repeatLimit) {
        int n = s.size();
        for(int i=0;i<n;i++){
            m[(s[i]-'a')]+=1;
        }
        int i=findNextChar(25);
        int j= findNextChar(i-1);
        
        string ans = "";
        while(i>=0){
            if(j<0){
                for(int k=0;k<repeatLimit;k++){
                    if(m[i]>0){
                        ans+= ('a' + i);
                        m[i]--;
                    }else{
                        break;
                    }
                } 
                // vuxvxvy uu-> y  xx vvv uu
                break;
            }else{
                int flag=0;
                for(int k=0;k<repeatLimit;k++){
                    if(m[i]>0){
                        ans+= ('a' + i);
                        m[i]--;
                    }else{
                        i=j;
                        j= findNextChar(j-1);
                        flag=1;
                        break;
                    }
                }
                 if(!flag){
                    ans+= ('a' + j);
                    m[j]-=1;
                    if(m[i]==0){
                        if(m[j]==0){
                            i=findNextChar(j-1);
                            j= findNextChar(i-1);
                        }else{
                            i=j;
                            if(ans.size()>0)
                                ans.pop_back();
                            m[i]+=1;
                            j=findNextChar(j-1);
                        }
                    }
                    else if(m[j]==0){
                        j= findNextChar(j-1);
                    }
                }
            }
        }
        return ans;
        
    }
    int findNextChar(int k){
        for(int i=k;i>=0;i--){
            if(m.find(i)!=m.end() && m[i]>0)
                return i;
        }
        return -1;
    }
};
