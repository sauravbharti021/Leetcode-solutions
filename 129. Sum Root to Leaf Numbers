/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    vector<ll> ans;
    int sumNumbers(TreeNode* root) {
        string f="";
        recur(root, f);
        
        ll s=0;
        rep(i ,ans.size()) s+=ans[i];
        
        return s;
    }
    
    void recur(TreeNode* root, string val){
        if(root==NULL){
            
            return;
        }
        
        val+=(root->val + '0');
        if(root->left == NULL && root->right == NULL){
            ll now= stoll(val);
            ans.pb(now);
        }
        recur(root->left, val);
        recur(root->right, val);
    }
};
