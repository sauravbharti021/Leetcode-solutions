#define rep(i,n) for(int i=0;i<n;i++)
#define rrep(i,n) for(int i=n-1;i>=0;i--)
#define ll long long
class Solution {
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        
        int n= nums.size();
        
        if(goal == 0){
            
            int cnt=0;
            int ans =0;
            
            rep(i,n){
                if(nums[i]==1){
                    ans+= (cnt*(cnt+1))/2;
                    cnt=0;
                }else{
                    cnt+=1;
                }
            }
            
            ans+= (cnt*(cnt+1))/2;
            
            return ans;
        }
        
        vector<int> p;
        rep(i,n){
            if(nums[i]==1){
                p.push_back(i);
            }
        }
        
        vector<int> pre(n,0), suf(n,0);
        
        ll cnt=0;
        rep(i,n){
            if(nums[i]==1){
                pre[i] = cnt;
                cnt=0;
            }else{
                cnt+=1;
            }
        }
        cnt=0;
        rrep(i,n){
            if(nums[i]==1){
                suf[i] = cnt;
                cnt=0;
            }else{
                cnt+=1;
            }
        }
        
        
        long long ans =0;
        rep(i,n){
            if(nums[i]==1){
                
                auto left = lower_bound(p.begin(), p.end(), i);
                int right = -1;
                
                if(left!=p.end()){
                    int temp = left-p.begin();
                    
                    if((temp+goal-1)<p.size()){
                        right = p[temp+goal-1];
                        
                        ans += ((suf[right]+1) * (1+pre[i])  ) ;
                    }
                    
                }
            }
        }
        
        return ans;
        
        
    }
};
