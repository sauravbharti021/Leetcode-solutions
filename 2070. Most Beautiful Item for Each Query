class Solution {
public:
    vector<int> maximumBeauty(vector<vector<int>>& items, vector<int>& queries) {
        sort(items.begin(), items.end());
        int n= items.size();
        stack<pair<int,int>> st;
        for(int i=0;i<n;i++){
            if(st.empty()){
                st.push({items[i][0], items[i][1]});
            }
            else{
                if(st.top().second>=items[i][1]) continue;
                st.push({items[i][0], items[i][1]});                
            }
        }
        
        vector<pair<int,int>> a;
        while(!st.empty()){
            pair<int,int> x= st.top();
            st.pop();
            a.push_back({x.first, x.second});
        }
        reverse(a.begin(), a.end());

        vector<int> ans;
        for(int i=0;i<queries.size();i++){
            auto it = lower_bound(a.begin(), a.end(), make_pair(queries[i]+1, -10000000));
            if(it==a.begin()) ans.push_back(0);
            else{
                --it;
                ans.push_back(it->second);
            }
        }
        return ans;
    }
};
