#define rep(i,n) for(int i=0;i<n;i++)
#define ss second
#define ff first
#define ll long long
class Solution {
public:
    int mostBooked(int n, vector<vector<int>>& meetings) {
      
        vector<int> fre(n, 0);
        
        priority_queue<pair<ll,ll>, vector<pair<ll,ll>>, greater<pair<ll,ll>>> p;
        
        priority_queue<ll, vector<ll>, greater<ll>> ava;
        
        rep(i,n) ava.push(i);
        sort(meetings.begin(), meetings.end());
        
        rep(i,meetings.size()){
            
            while(!p.empty() && p.top().ff<= meetings[i][0]){
                ava.push(p.top().ss);
                p.pop();
            }
            
            if(!ava.empty()){
                fre[ava.top()]++;
                p.push({meetings[i][1],  ava.top()});
                ava.pop();
            }
            else{
                pair<ll,ll> available_first = p.top();
                p.pop();
                
                ll end= meetings[i][1];
                
                ll avail_end= available_first.ff;
                ll start = meetings[i][0];
                
                p.push({avail_end + end - start,  available_first.ss });
                
                fre[available_first.ss]++;
            }
            
        }
        
        int mx = -1, index=-1;
        
        rep(i, n){
            cout<<fre[i]<<" ";
            if(fre[i]>mx){
                mx=fre[i];
                index=i;
            }
        }
        return index;
        
    }
};
