#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_multiset tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>

#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)

class MedianFinder {
public:
    int sum=0, ele=0;
    ordered_multiset m;
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        m.insert(num);
        ele++;
    }
    
    double findMedian() {
        
        if(ele%2==1){
            int heh= ele/2 ;
            int x= *m.find_by_order(heh);
            
            double k = 1.0 * x;
            return k;
        }
        
        int lol= ele/2;
        int now= lol-1;
        
         ll sum= *m.find_by_order(lol) + *m.find_by_order(now);
        
        double y= (1.0 * sum) /2;

        return y;
    }
};
