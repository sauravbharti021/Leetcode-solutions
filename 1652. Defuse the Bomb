class Solution {
public:
    vector<int> decrypt(vector<int>& code, int k) {
        int n = code.size();
        vector<int> pre(n,0);
        for(int i=0;i<n;i++){
            pre[i]= code[i] + (i>0? pre[i-1]: 0);
        }
        vector<int> ans;
        for(int i=0;i<n;i++){
            if(k>0){
                if((i+k)>=n){
                    int sum = pre[n-1] - pre[i];
                    int leftIndex = k - ((n) - i);
                    sum += pre[leftIndex];
                    ans.push_back(sum);
                }else{
                    ans.push_back(pre[i+k] - pre[i]);
                }               
            }else if(k==0){
                ans.push_back(0);
            }else{
                k= abs(k);
                if((i-k)>=0){
                    ans.push_back(pre[i-1] - (i-k-1>=0 ? pre[i-k-1]: 0));
                }else{
                    int rightRem = (k- (i));
                    int sum = (i>0 ? pre[i-1] : 0) + (pre[n-1] - pre[n-rightRem-1]);
                    ans.push_back(sum);
                }
                k=-1*k;
            }
        }
        
        return ans;
    }
};
