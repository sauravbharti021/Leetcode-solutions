#define ll long long
#define pi (3.141592653589)
#define mod 1000000007
#define float double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(c) c.begin(), c.end()
#define min3(a, b, c) min(c, min(a, b))
#define min4(a, b, c, d) min(d, min(c, min(a, b)))
#define rrep(i, n) for(int i=n-1;i>=0;i--)
#define rep(i,n) for(int i=0;i<n;i++)


class Solution {
    vector<ll> a;
        ll mx;
public:
    
    int maxPathSum(TreeNode* root) {
        
        TreeNode* head= root;
        a.clear();
        mx=-1e5;
        ll ans= recur(head);
        if(mx==0){
            sort(all(a));
            return a.back();
        }
       
        return mx;
        
    }
    
    ll recur(TreeNode* head){
        
        if(head==NULL) return 0;
        
        a.pb(head->val);
        
        ll sum_l=0;
        //Kadane
        
        sum_l+= recur(head->left);
        mx=max(mx, sum_l);
        if(sum_l<0) sum_l=0;
        
        ll sum_r=0; 
        sum_r+= recur(head->right);
        mx=max(mx, sum_r);
        if(sum_r<0) sum_r=0;
        
        mx= max(mx, head->val+sum_l + sum_r );
        return head->val+ max(sum_l , sum_r);
        
    }
};
