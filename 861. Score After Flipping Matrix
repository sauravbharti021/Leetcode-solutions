class Solution {
public:
    vector<vector<int>> row(vector<vector<int>> &g){
        int n= g.size(), m= g[0].size();
        
        for(int i=0;i<n;i++){
            if(g[i][0] == 1) continue;
            else{
                for(int j=0;j<m;j++){
                    g[i][j]^= 1;
                }
            }
        }
        
        return g;
    }
    
    vector<vector<int>> col(vector<vector<int>> &g){
        int n= g.size(), m= g[0].size();
        
        for(int j=0;j<m;j++){
            int cnt=0;
            for(int i=0;i<n;i++){
                if(g[i][j]==1){
                    cnt++;
                }
            }
            if(cnt> n/2) continue;
            for(int i=0;i<n;i++){
                g[i][j]^=1;
            }
        }
        
        return g;
    }
    int answer(vector<vector<int>> &g){
        int ans=0;
        int m= g[0].size();
        for(int i=0;i<g.size();i++){
            int temp=0;
            for(int j=0;j<g[i].size();j++){
                if(g[i][j] == 1){
                    temp += (1<<(m-j-1));
                }
            }
            ans+= temp;
        }
        return ans;
    }
    void print(vector<vector<int>> &g){
        int n= g.size(), m= g[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cout<<g[i][j]<<" ";
            }cout<<"\n";
        }
    }
    int matrixScore(vector<vector<int>>& grid) {

        grid = col(grid);
        grid = row(grid);
        grid = col(grid);
        grid = row(grid);
        grid = col(grid);
        grid = row(grid);
        
        int ans = answer(grid);
        return ans;
        
    }
};
