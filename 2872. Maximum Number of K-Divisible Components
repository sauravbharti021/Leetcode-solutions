#define ll long long
class Solution {
public:
    int cnt =0;
    vector<vector<int>> adj;
    vector<bool> vis;
    int maxKDivisibleComponents(int n, vector<vector<int>>& edges, vector<int>& values, int k) {

        if(n==1) return (values[0]%k==0);
        adj.assign(n+1, vector<int>{});
        vis.assign(n+1, false);
        for(int i=0;i<n-1;i++){
            int u = edges[i][0], v= edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        ll f = recur(0, values, k);
        return cnt;
    }
    ll recur(int n, vector<int> &values, int k){

        ll val = values[n];
        ll sum =val;
        vis[n] = true;
        for(int i=0;i<adj[n].size();i++){
            if(!vis[adj[n][i]]){
                sum += recur(adj[n][i], values, k);   
            }
        }

        if(sum%k==0){
            cnt+=1;
            sum = 0;
        }
        return sum;
    } 
};
