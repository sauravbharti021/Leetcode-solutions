class Trie{
public:
    int fullWord;
    vector<Trie*> child;
    Trie(){
        fullWord = 0;
        child.assign(26, NULL);
    }
};
class Solution {
public:
    Trie* cur;
    Solution(){
        cur = new Trie();
    }
    void insert(string word){
        Trie* now = cur;
        for(int i=0;i<word.size();i++){
            int x= word[i]-'a';
            if(now->child[x]==NULL){
                now->child[x] = new Trie();
            }
            now = now->child[x];
        }
        now->fullWord += 1;
    }
    bool searcher(string word){
        Trie* now = cur;
        for(int i=0;i<word.size();i++){
            int x= word[i] - 'a';
            if(now->child[x]==NULL) return false;
            now= now->child[x];
        }
        return true;
    }
    int isPrefixOfWord(string sentence, string searchWord) {
        vector<string> words = splitter(sentence);
        int ans = 0;
        int n= searchWord.size();
        for(int i=0;i<words.size();i++){
            int j=0;
            for(int k=0;k<words[i].size();k++){
                if(j>=n) {
                    return i+1;
                }else{
                    if(words[i][k]!=searchWord[j]) break;
                    j++;
                }
            }
            if(j>=n) return i+1;
        }
        return -1;
    }
    vector<string> splitter(string sentence){
        int n= sentence.size();
        vector<string> res;
        for(int i=0;i<n;i++){
            int j=i;
            int flag = 0;
            string now="";
            while(j<n && sentence[j]!=' '){
                now+= sentence[j];
                j+=1;
                flag = 1;
            }
            if(flag){
                res.push_back(now);
                i=j-1;
            }
        }
        return res;
    }
};
