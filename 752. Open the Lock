#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int openLock(vector<string>& deadends, string target) {
        
        if(target == "0000")
            return 0;
        
        set<string> s;
        rep(i, deadends.size()){
            s.insert(deadends[i]);
        }
        if(s.find("0000")!=s.end())
            return -1;
        
        queue<string> q;
        q.push("0000");
        unordered_map<string, int> ans;
        ans["0000"] =0;
        
        while(!q.empty()){
            string f= q.front();
            q.pop();
            
            if(f==target)
                return ans[f];
            
            rep(i,4){
                string t= f;
                int x= (f[i]-'0');

                t[i] = (((x+1)%10)+ '0');
                
                if(s.find(t) == s.end() && ans.find(t)==ans.end()){
                    ans[t] = (ans[f]+1);
                    q.push(t);
                }
                t = f;
                t[i] = (((x-1 + 10)%10) + '0');
                if(s.find(t) == s.end() && ans.find(t)==ans.end()){
                    ans[t] = (ans[f]+1);
                    q.push(t);
                }
                
            }
        }
        return -1;
    }
}; 
