#define rep(i,n) for(int i=0;i<n;i++)
class Solution {
public:
    int calculator(stack<char> st, int x, int y){
        int ans =0;
        if(!st.empty()){
            string temp = "";
            while(!st.empty()){
                temp+= st.top();
                st.pop();
            }
            reverse(temp.begin(), temp.end());
            for(int i=0;i<temp.size();i++){
                if(!st.empty() && st.top()!=temp[i]){
                    if(temp[i]=='b'){
                        ans+= x;
                        st.pop();
                    }else{
                        ans+= y;
                        st.pop();
                    }
                }else{
                    st.push(temp[i]);
                }
            }
            
        }
        
        return ans;
    }
    int maximumGain(string s, int x, int y) {
        
        stack<char> st;
        int n = s.size();
        int ans = 0;
        rep(i,n){
            if(s[i]!='a' && s[i]!='b'){
                ans+= calculator(st, x, y);
                while(!st.empty())
                    st.pop();
            }
            else{
                if(y>=x){
                    if(!st.empty() && st.top()!=s[i] && s[i]=='a'){
                        ans+= y;   
                        st.pop();
                    }else{
                        st.push(s[i]);
                    } 
                }else{
                    if(!st.empty() && st.top()!=s[i] && s[i]=='b'){
                        ans+= x;   
                        st.pop();
                    }else{
                        st.push(s[i]);
                    } 
                }
            }
        }
        ans += calculator(st, x, y);
        
        return ans;
        
    }
};
