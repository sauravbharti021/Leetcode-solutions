#define rep(i,n) for(int i=0;i<n;i++)
#define ff first 
#define ss second
class Solution {
public:
    vector<vector<int>> d{{-1,0},{1,0}, {0,-1},{0,1}};
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        
        int n= mat.size(), m=mat[0].size();
        vector<vector<int>> dis(n, vector<int>(m, 1e8));
        queue<pair<int,int>> q;
        rep(i,n){
            rep(j,m){
                if(mat[i][j]==0){
                    dis[i][j]=0;
                    q.push({i,j});
                }
            }
        }
        
        while(!q.empty()){
            int size=q.size();
            while(size--){
                pair<int,int> x= q.front();
                q.pop();
                rep(k, 4){
                    int i= x.ff+d[k][0], j= x.ss+ d[k][1];
                    if(i<n && j<m && i>=0 && j>=0 && dis[i][j]> 1+ dis[x.ff][x.ss]) {
                        q.push({i,j});
                        dis[i][j] = 1+ dis[x.ff][x.ss];
                    }
                }
            }
        }
        
        return dis;
        
    }
};
