#define ll long long
class Solution {
public:
    vector<int> prime;
    vector<int> bunchOfPrimes;
    void seiveOfEratosthenes(int n, int left){
        prime.assign(n+1, 1);
        
        for(ll i=2;i<=n;i++){
            if(prime[i]==1){
                prime[i]=i;
                if(i>=left)
                    bunchOfPrimes.push_back(i);
                for(ll j=i*i;j<=n;j+=i){
                    prime[j]=i;
                }

            }
        }
    }

    vector<int> closestPrimes(int left, int right) {
        seiveOfEratosthenes(right, left);
        vector<int> ans;
        int mi = 1e9;
        int prev = -1;
        int size = bunchOfPrimes.size();
        for(int i=0;i<size-1;i++){
            if(mi>(bunchOfPrimes[i+1]-bunchOfPrimes[i])){
                mi = bunchOfPrimes[i+1]-bunchOfPrimes[i];
                ans = vector<int> {bunchOfPrimes[i], bunchOfPrimes[i+1]};
            }
        }
        if(mi==1e9){
            return vector<int> {-1,-1};
        }

        return ans;
    }
};
